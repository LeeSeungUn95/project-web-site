<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamright.brokurly.customer.mapper.MyPageMapper">
	<!-- 대표 주문 내역 조회 -->
	<select id="getOrder" resultType="com.teamright.brokurly.model.OrderVO">
		SELECT * FROM order_table WHERE customer_id=#{customer_id}
	</select>
	<!-- 주문번호별 총 금액 조회 -->
	<select id="getTotalPrice" resultType="com.teamright.brokurly.model.DetailOrderVO">
		SELECT order_id, sum(product_price) as total_price FROM order_table 
											INNER JOIN detailorder_table USING (order_id) 
											INNER JOIN product_table USING (product_id) 
											WHERE customer_id=#{customer_id} GROUP BY order_id
	</select>
	<!-- 고객이 가지고 있는 모든 주문내역 조회 -->
	<select id="getOrderList" resultType="com.teamright.brokurly.model.DetailOrderVO">
		SELECT * FROM order_table INNER JOIN detailorder_table USING (order_id) WHERE customer_id=#{customer_id}
	</select>
	<!-- 입력받은 고객 아이디별 주문내역 조회: 주문번호 당 상품개수 조회 -->
	<resultMap type="com.teamright.brokurly.model.DetailOrderVO" id="getOrderIdAndCount">
		<result property="order_id" column="order_id" />
		<result property="count" column="count" />
	</resultMap>
	<select id="getOrderIdAndCount" resultType="com.teamright.brokurly.model.DetailOrderVO" resultMap="getOrderIdAndCount">
		SELECT order_id, count(*) as count FROM order_table INNER JOIN detailorder_table USING (order_id) 
								  WHERE customer_id=#{customer_id} GROUP BY order_id
	</select>
	<!-- 주문번호별 상품 정보 목록 받기 -->
	<select id="getListByOrder" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM order_table INNER JOIN detailorder_table USING (order_id) 
								  INNER JOIN product_table USING (product_id)
								  INNER JOIN subcategory_table USING (subcate_id)
								  WHERE customer_id=#{customer_id} AND TO_CHAR(order_time, 'YYYY')<![CDATA[<=]]>#{year}
	</select>
	<select id="getListByOrderYear" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM order_table INNER JOIN detailorder_table USING (order_id) 
								  INNER JOIN product_table USING (product_id)
								  INNER JOIN subcategory_table USING (subcate_id)
								  WHERE customer_id=#{customer_id} AND TO_CHAR(order_time, 'YYYY')=#{year}
	</select>
	<!-- 주문번호별 배송상태 조회 -->
	<select id="getDeliStatus" resultType="com.teamright.brokurly.model.DeliveryVO">
		SELECT order_id, delivery_status FROM order_table INNER JOIN delivery_table USING (order_id) 
										 WHERE customer_id=#{customer_id}
	</select>
	<insert id="insertNewAddr">
		INSERT INTO address_table(customer_id, address_main, address_detail, address_check) 
		VALUES(#{customer_id}, #{address_main}, #{address_detail}, #{address_check})
	</insert>
	<update id="updateAddrChk">
		UPDATE address_table SET address_check = 0 WHERE customer_id=#{customer_id}
	</update>
	<update id="updatePopup1">
		UPDATE address_table SET address_detail=#{address_detail}, receive_customer=#{receive_customer}, receive_tel=#{receive_tel}
							 WHERE customer_id=#{customer_id} AND address_main=#{address_main}
	</update>
	<update id="updatePopup0">
		UPDATE address_table SET address_detail=#{address_detail}, receive_customer=#{receive_customer},
								 receive_tel=#{receive_tel}, address_check=#{address_check} 
								 WHERE customer_id=#{customer_id} AND address_main=#{address_main}
	</update>
	<delete id="deletePopup0">
		DELETE FROM address_table WHERE customer_id=#{customer_id} AND address_main=#{address_main}
	</delete>
	<select id="getOrderView" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM order_table INNER JOIN detailorder_table USING (order_id)
								  INNER JOIN product_table USING (product_id)
								  INNER JOIN subcategory_table USING (subcate_id)
								  INNER JOIN event_table USING (event_id)
								  INNER JOIN delivery_table USING (order_id)
								  WHERE customer_id=#{customer_id} AND order_id=#{order_id}
	</select>
	<select id="getSumOrderList" resultType="int">
		SELECT sum(product_price) FROM order_table INNER JOIN detailorder_table USING (order_id)
												   INNER JOIN product_table USING (product_id) 
												   INNER JOIN subcategory_table USING (subcate_id) 
												   INNER JOIN event_table USING (event_id) 
												   INNER JOIN delivery_table USING (order_id) 
												   WHERE customer_id=#{customer_id} AND order_id=#{order_id}
	</select>
	<select id="getCouponList" resultType="com.teamright.brokurly.model.CouponVO">
		SELECT * FROM coupon_table
	</select>
	<insert id="insertCoupon">
		INSERT INTO customer_coupon_table VALUES(#{customer_id}, #{coupon_id}, '미사용')
	</insert>
	<update id="updateInfo">
		UPDATE customer_table SET 
								customer_pw=#{customer_pw},
								customer_name=#{customer_name},
								customer_email=#{customer_email},
								customer_tel=#{customer_tel},
								customer_gender=#{customer_gender},
								customer_birth=#{customer_birth} 
							  WHERE 
							    customer_id=#{customer_id}
	</update>
	<select id="getCartCount" resultType="int">
		SELECT count(*) FROM cart_table WHERE customer_id=#{customer_id} AND product_id=#{product_id}
	</select>
	<insert id="insertOneProduct">
		INSERT INTO cart_table VALUES (cart_id_seq.nextval, 1, #{product_id}, #{customer_id})
	</insert>
	<update id="updateOneProduct">
		UPDATE cart_table SET cart_count=cart_count+1 WHERE customer_id=#{customer_id} AND product_id=#{product_id}
	</update>
	<select id="getProductId" resultType="int">
		SELECT product_id FROM order_table INNER JOIN detailorder_table USING (order_id) 
										   WHERE customer_id=#{customer_id} AND order_id=#{order_id}
	</select>
</mapper>