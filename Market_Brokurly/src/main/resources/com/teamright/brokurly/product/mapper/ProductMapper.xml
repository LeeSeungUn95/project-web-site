<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamright.brokurly.product.mapper.ProductMapper">
	<select id="getListBySub" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM product_table WHERE subcate_id=#{subcate_id}
	</select>
	<select id="getProductInfo" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM product_table WHERE product_id=#{product_id}
	</select>
	<select id="getSearch" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT DISTINCT maincate_id, subcate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) 
		AS discount_price 
		FROM 
			product_table p INNER JOIN 
			event_table e USING(event_id) INNER JOIN 
			subcategory_table USING(subcate_id) 
		WHERE 
			product_name LIKE '%'||#{product_name}||'%'
	</select>
	<select id="getListByMain" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT DISTINCT 
			maincate_id, subcate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) AS discount_price 
		FROM 
			product_table p 
		INNER JOIN 
			event_table e USING(event_id) 
		INNER JOIN 
			subcategory_table USING(subcate_id) 
		WHERE 
			maincate_id = #{maincate_id}
	</select>
	<select id="getProductList" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT 
			product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) AS discount_price 
		FROM 
			event_table e 
		INNER JOIN 
			product_table p USING(event_id) 
		WHERE 
			product_id = #{product_id}
	</select>
	<select id="getRandomList" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT * FROM (    
		SELECT DISTINCT 
			product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) AS discount_price 
		FROM  
			subcategory_table, event_table e 
		INNER JOIN 
			product_table p USING(event_id) 
		ORDER BY 
			DBMS_RANDOM.RANDOM 
		) WHERE <![CDATA[ ROWNUM <= 50 ]]>
	</select>
	<select id="getRandomMaincateList" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT DISTINCT 
			maincate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) AS discount_price 
		FROM  
			subcategory_table 
		INNER JOIN 
			product_table p USING(subcate_id) 
		INNER JOIN 
			event_table e USING(event_id) 
		WHERE 
			maincate_id = #{maincate_id} 
		AND 
			<![CDATA[ ROWNUM <= 6 ]]> 
		ORDER BY 
			DBMS_RANDOM.RANDOM
	</select>
	<select id="getMdList" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT 
			maincate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) 
			AS discount_price 
		FROM  
			subcategory_table s1
		INNER JOIN 
			product_table p USING(subcate_id)
		INNER JOIN 
			event_table e USING(event_id) 
		WHERE 
			product_id 
		IN
		    (
		    SELECT product_id
		    FROM subcategory_table s2
		    INNER JOIN product_table 
		    USING(subcate_id)
		    WHERE <![CDATA[ ROWNUM <= 4 ]]> AND s1.maincate_id = s2.maincate_id
		    )
		ORDER BY 
			s1.maincate_id
	</select>
	<select id="getSubList" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT DISTINCT 
			subcate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) 
		AS 
			discount_price 
		FROM
			product_table p 
		INNER JOIN 
			event_table e USING(event_id)
		WHERE 
			subcate_id = #{subcate_id} 
		ORDER BY 
			subcate_id
	</select>
	<select id="getSubByMain" resultType="com.teamright.brokurly.model.ProductVO">
		SELECT 
			subcate_id, product_name, product_id, product_price, event_discount, CEIL(product_price * ((100 - e.event_discount) / 100)) AS discount_price 
		FROM 
			product_table p 
		INNER JOIN 
			event_table e USING(event_id) 
		INNER JOIN 
			subcategory_table USING(subcate_id) 
		WHERE 
			maincate_id = #{maincate_id} 
		ORDER BY 
			subcate_id                             
	</select>
<!-- 장바구니 -->
	<select id="cartSelect" resultType="int">
		SELECT count(*) FROM cart_table WHERE product_id = #{product_id} AND customer_id = #{customer_id}
	</select>
	<insert id="cartInsert">
        INSERT INTO 
        	cart_table(cart_id, cart_count, product_id, customer_id)
        VALUES 
          (cart_id_seq.nextval, 1, #{product_id}, #{customer_id})
    </insert>
    <update id="cartUpdate">
    	UPDATE cart_table SET cart_count = cart_count + 1 
    	WHERE customer_id = #{customer_id} AND product_id = #{product_id}
    </update>
    <select id="cartCheckExist" resultType="Integer">
    	SELECT product_id FROM product_detail WHERE product_id = #{product_id}
    </select>
</mapper>